load("@rules_python//python:defs.bzl", "py_library")
load("@tink_py_pip_deps//:requirements.bzl", "requirement")

licenses(["notice"])

py_library(
    name = "daead",
    srcs = ["__init__.py"],
    deps = [
        ":daead_primitive",
        ":deterministic_aead_key_manager",
        ":deterministic_aead_key_templates",
        ":deterministic_aead_wrapper",
    ],
)

py_library(
    name = "daead_primitive",
    srcs = ["deterministic_aead.py"],
    deps = [requirement("six")],
)

py_library(
    name = "deterministic_aead_key_manager",
    srcs = ["deterministic_aead_key_manager.py"],
    deps = [
        ":daead_primitive",
        "@tink_base//proto:tink_py_pb2",
        "//tink/cc/pybind:cc_key_manager",
        "//tink/core:key_manager",
        "//tink/core:tink_error",
    ],
)

py_test(
    name = "deterministic_aead_key_manager_test",
    srcs = ["deterministic_aead_key_manager_test.py"],
    deps = [
        ":daead_primitive",
        ":deterministic_aead_key_manager",
        ":deterministic_aead_key_templates",
        requirement("absl-py"),
        "@tink_base//proto:aes_siv_py_pb2",
        "@tink_base//proto:tink_py_pb2",
        "//tink:tink_config",
        "//tink/core:tink_error",
    ],
)

py_library(
    name = "deterministic_aead_key_templates",
    srcs = ["deterministic_aead_key_templates.py"],
    deps = [
        "@tink_base//proto:aes_siv_py_pb2",
        "@tink_base//proto:tink_py_pb2",
    ],
)

py_test(
    name = "deterministic_aead_key_templates_test",
    srcs = ["deterministic_aead_key_templates_test.py"],
    deps = [
        ":deterministic_aead_key_templates",
        requirement("absl-py"),
        "@tink_base//proto:aes_siv_py_pb2",
        "@tink_base//proto:tink_py_pb2",
    ],
)

py_library(
    name = "deterministic_aead_wrapper",
    srcs = ["deterministic_aead_wrapper.py"],
    deps = [
        ":daead_primitive",
        requirement("absl-py"),
        "//tink/core:crypto_format",
        "//tink/core:primitive_set",
        "//tink/core:primitive_wrapper",
        "//tink/core:tink_error",
    ],
)

py_test(
    name = "deterministic_aead_wrapper_test",
    srcs = ["deterministic_aead_wrapper_test.py"],
    deps = [
        ":daead_primitive",
        ":deterministic_aead_wrapper",
        requirement("absl-py"),
        "@tink_base//proto:tink_py_pb2",
        "//tink/core:primitive_set",
        "//tink/core:tink_error",
        "//tink/testing:helper",
    ],
)
