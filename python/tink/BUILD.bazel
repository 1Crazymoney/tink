load("@tink_py_pip_deps//:requirements.bzl", "requirement")

package(default_visibility = ["//:__subpackages__"])

licenses(["notice"])

py_library(
    name = "tink_python",
    srcs = ["__init__.py"],
    visibility = ["//visibility:public"],
    deps = [
        ":tink",
    ],
)

py_library(
    name = "tink",
    deps = [
        ":_keyset_handle",
        ":_keyset_reader",
        ":_keyset_writer",
        ":tink_config",
        "//tink/aead",
        "//tink/core",
        "//tink/daead",
        "//tink/hybrid",
        "//tink/mac",
        "//tink/signature",
        "//tink/streaming_aead",
    ],
)

py_library(
    name = "_keyset_handle",
    srcs = ["_keyset_handle.py"],
    deps = [
        ":_keyset_reader",
        ":_keyset_writer",
        "//tink/aead:aead_primitive",
        "//tink/core",
        "//tink/proto:tink_py_pb2",
    ],
)

py_test(
    name = "_keyset_handle_test",
    srcs = ["_keyset_handle_test.py"],
    deps = [
        ":tink_config",
        ":tink_python",
        requirement("absl-py"),
        "//tink/aead",
        "//tink/core",
        "//tink/hybrid",
        "//tink/mac",
        "//tink/proto:tink_py_pb2",
        "//tink/testing:helper",
    ],
)

py_library(
    name = "_keyset_reader",
    srcs = ["_keyset_reader.py"],
    deps = [
        "//tink/core",
        requirement("six"),
        "//tink/proto:tink_py_pb2",
    ],
)

py_test(
    name = "_keyset_reader_test",
    srcs = ["_keyset_reader_test.py"],
    deps = [
        ":tink_python",
        "//tink/core",
        requirement("absl-py"),
        "//tink/proto:tink_py_pb2",
    ],
)

py_library(
    name = "_keyset_writer",
    srcs = ["_keyset_writer.py"],
    deps = [
        "//tink/core",
        requirement("six"),
        "//tink/proto:tink_py_pb2",
    ],
)

py_test(
    name = "_keyset_writer_test",
    srcs = ["_keyset_writer_test.py"],
    deps = [
        ":tink_python",
        "//tink/core",
        requirement("absl-py"),
        "//tink/proto:tink_py_pb2",
    ],
)

py_library(
    name = "tink_config",
    srcs = ["tink_config.py"],
    deps = [
        "//tink/aead",
        "//tink/cc/pybind:cc_key_manager",
        "//tink/cc/pybind:cc_tink_config",
        "//tink/core",
        "//tink/daead",
        "//tink/hybrid",
        "//tink/mac",
        "//tink/signature",
    ],
)

py_test(
    name = "tink_config_test",
    srcs = ["tink_config_test.py"],
    deps = [
        ":tink_config",
        requirement("absl-py"),
        "//tink/aead",
        "//tink/core",
        "//tink/daead",
        "//tink/hybrid",
        "//tink/mac",
        "//tink/proto:tink_py_pb2",
        "//tink/signature",
    ],
)
