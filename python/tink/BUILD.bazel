load("@tink_py_pip_deps//:requirements.bzl", "requirement")

package(default_visibility = ["//:__subpackages__"])

licenses(["notice"])

py_library(
    name = "tink_python",
    srcs = ["__init__.py"],
    visibility = ["//visibility:public"],
    deps = [
        ":tink",
    ],
)

py_library(
    name = "tink",
    deps = [
        ":tink_config",
        "//tink/aead",
        "//tink/core",
        "//tink/daead",
        "//tink/hybrid",
        "//tink/mac",
        "//tink/signature",
        "//tink/streaming_aead",
    ],
)

py_library(
    name = "tink_config",
    srcs = ["tink_config.py"],
    deps = [
        "//tink/aead",
        "//tink/aead:aead_key_manager",
        "//tink/cc/pybind:cc_key_manager",
        "//tink/cc/pybind:cc_tink_config",
        "//tink/core",
        "//tink/daead",
        "//tink/daead:deterministic_aead_key_manager",
        "//tink/hybrid",
        "//tink/hybrid:hybrid_decrypt_key_manager",
        "//tink/hybrid:hybrid_encrypt_key_manager",
        "//tink/mac",
        "//tink/mac:mac_key_manager",
        "//tink/signature",
        "//tink/signature:public_key_sign_key_manager",
        "//tink/signature:public_key_verify_key_manager",
    ],
)

py_test(
    name = "tink_config_test",
    srcs = ["tink_config_test.py"],
    deps = [
        ":tink_config",
        requirement("absl-py"),
        "//tink/proto:tink_py_pb2",
        "//tink/aead",
        "//tink/core",
        "//tink/daead",
        "//tink/hybrid",
        "//tink/mac",
        "//tink/signature",
    ],
)
