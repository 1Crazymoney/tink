package(default_visibility = ["//tools/build_defs:internal_pkg"])

licenses(["notice"])

cc_library(
    name = "cc_key_manager",
    hdrs = ["cc_key_manager.h"],
    include_prefix = "tink/",
    deps = [
        "//cc",
        "//cc/util:errors",
        "//cc/util:status",
        "//cc/util:statusor",
        "//proto:tink_cc_proto",
    ],
)

cc_library(
    name = "python_file_object_adapter",
    hdrs = ["python_file_object_adapter.h"],
    include_prefix = "tink/python",
    strip_include_prefix = "/python",
    deps = [
        "//cc/util:status",
        "//cc/util:statusor",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "python_output_stream",
    srcs = ["python_output_stream.cc"],
    hdrs = ["python_output_stream.h"],
    include_prefix = "tink/python",
    strip_include_prefix = "/python",
    deps = [
        ":python_file_object_adapter",
        "//cc:output_stream",
        "//cc/subtle:subtle_util",
        "//cc/util:errors",
        "//cc/util:status",
        "//cc/util:statusor",
        "@com_google_absl//absl/base:core_headers",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/strings",
    ],
)

cc_test(
    name = "python_output_stream_test",
    size = "medium",
    srcs = ["python_output_stream_test.cc"],
    linkopts = ["-lpthread"],
    deps = [
        ":python_output_stream",
        ":test_util",
        "//cc/subtle:random",
        "//cc/util:status",
        "//cc/util:statusor",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/strings",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "output_stream_adapter",
    srcs = ["output_stream_adapter.cc"],
    hdrs = ["output_stream_adapter.h"],
    include_prefix = "tink/python",
    strip_include_prefix = "/python",
    deps = [
        "//cc:output_stream",
        "//cc/util:status",
        "//cc/util:statusor",
        "@com_google_absl//absl/strings",
    ],
)

cc_test(
    name = "output_stream_adapter_test",
    size = "small",
    srcs = ["output_stream_adapter_test.cc"],
    deps = [
        ":output_stream_adapter",
        "//cc:output_stream",
        "//cc/subtle:random",
        "//cc/util:ostream_output_stream",
        "//cc/util:test_matchers",
        "@com_google_absl//absl/memory",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "test_util",
    hdrs = ["test_util.h"],
    include_prefix = "tink/python",
    strip_include_prefix = "/python",
    deps = [
        ":python_file_object_adapter",
    ],
)

cc_library(
    name = "cc_streaming_aead_wrappers",
    srcs = ["cc_streaming_aead_wrappers.cc"],
    hdrs = ["cc_streaming_aead_wrappers.h"],
    include_prefix = "tink/python",
    strip_include_prefix = "/python",
    deps = [
        ":output_stream_adapter",
        ":python_file_object_adapter",
        ":python_output_stream",
        "@com_google_absl//absl/strings",
        "//cc:output_stream",
        "//cc:streaming_aead",
        "//cc/util:statusor",
    ],
)

cc_test(
    name = "cc_streaming_aead_wrappers_test",
    size = "small",
    srcs = ["cc_streaming_aead_wrappers_test.cc"],
    deps = [
        ":cc_streaming_aead_wrappers",
        ":test_util",
        "@com_google_googletest//:gtest_main",
        "//cc/util:test_matchers",
        "//cc/util:test_util",
    ],
)

cc_library(
    name = "python_input_stream",
    srcs = ["python_input_stream.cc"],
    hdrs = ["python_input_stream.h"],
    include_prefix = "tink/python",
    strip_include_prefix = "/python",
    deps = [
        ":python_file_object_adapter",
        "//cc:input_stream",
        "//cc/subtle:subtle_util",
        "//cc/util:errors",
        "//cc/util:status",
        "//cc/util:statusor",
        "@com_google_absl//absl/base:core_headers",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/strings",
    ],
)

cc_test(
    name = "python_input_stream_test",
    size = "medium",
    srcs = ["python_input_stream_test.cc"],
    deps = [
        ":python_input_stream",
        ":test_util",
        "//cc/subtle:random",
        "//cc/util:test_util",
        "@com_google_absl//absl/memory",
        "@com_google_googletest//:gtest_main",
    ],
)
